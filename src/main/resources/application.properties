spring.application.name=spring-ai-workshop

spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o

#spring.ai.chat.client.enabled=false
#
## OpenAI configuration
#spring.ai.openai.api-key=${OPENAI_API_KEY}
#spring.ai.openai.chat.options.model=gpt-4o
#
## Anthropic claude configuration
#spring.ai.anthropic.api-key=${ANTHROPIC_API_KEY}
#spring.ai.anthropic.chat.options.model=claude-opus-4-20250514

server.port=8081

logging.level.org.springframework.ai=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

logging.level.org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor=DEBUG

#
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# More detailed logging pattern
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n

# Additional Spring AI logging
#logging.level.org.springframework.ai.openai=DEBUG
#logging.level.org.springframework.ai.client.gateway=DEBUG

# WebClient logging at package level
#logging.level.reactor.netty=DEBUG
#logging.level.org.springframework.web.reactive=DEBUG

# Enable Netty wire logging
#logging.level.reactor.netty.http.client.HttpClient=DEBUG

# Log the prompt sent to the model
spring.ai.chat.observations.log-prompt=true
# Log the completion received from the model
spring.ai.chat.observations.log-completion=true

logging.level.org.springframework.ai.chat.client.advisor=DEBUG